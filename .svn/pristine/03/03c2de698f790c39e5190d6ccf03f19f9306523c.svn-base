//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class LuaInterface_LuaStatePtrWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(LuaInterface.LuaStatePtr), typeof(System.Object));
		L.RegFunction("LuaUpValueIndex", LuaUpValueIndex);
		L.RegFunction("LuaNewState", LuaNewState);
		L.RegFunction("LuaClose", LuaClose);
		L.RegFunction("LuaNewThread", LuaNewThread);
		L.RegFunction("LuaAtPanic", LuaAtPanic);
		L.RegFunction("LuaGetTop", LuaGetTop);
		L.RegFunction("LuaSetTop", LuaSetTop);
		L.RegFunction("LuaPushValue", LuaPushValue);
		L.RegFunction("LuaRemove", LuaRemove);
		L.RegFunction("LuaInsert", LuaInsert);
		L.RegFunction("LuaReplace", LuaReplace);
		L.RegFunction("LuaCheckStack", LuaCheckStack);
		L.RegFunction("LuaXMove", LuaXMove);
		L.RegFunction("LuaIsNumber", LuaIsNumber);
		L.RegFunction("LuaIsString", LuaIsString);
		L.RegFunction("LuaIsCFunction", LuaIsCFunction);
		L.RegFunction("LuaIsUserData", LuaIsUserData);
		L.RegFunction("LuaIsNil", LuaIsNil);
		L.RegFunction("LuaType", LuaType);
		L.RegFunction("LuaTypeName", LuaTypeName);
		L.RegFunction("LuaEqual", LuaEqual);
		L.RegFunction("LuaRawEqual", LuaRawEqual);
		L.RegFunction("LuaLessThan", LuaLessThan);
		L.RegFunction("LuaToNumber", LuaToNumber);
		L.RegFunction("LuaToInteger", LuaToInteger);
		L.RegFunction("LuaToBoolean", LuaToBoolean);
		L.RegFunction("LuaToString", LuaToString);
		L.RegFunction("LuaToLString", LuaToLString);
		L.RegFunction("LuaToCFunction", LuaToCFunction);
		L.RegFunction("LuaToUserData", LuaToUserData);
		L.RegFunction("LuaToThread", LuaToThread);
		L.RegFunction("LuaToPointer", LuaToPointer);
		L.RegFunction("LuaObjLen", LuaObjLen);
		L.RegFunction("LuaPushNil", LuaPushNil);
		L.RegFunction("LuaPushNumber", LuaPushNumber);
		L.RegFunction("LuaPushInteger", LuaPushInteger);
		L.RegFunction("LuaPushLString", LuaPushLString);
		L.RegFunction("LuaPushString", LuaPushString);
		L.RegFunction("LuaPushCClosure", LuaPushCClosure);
		L.RegFunction("LuaPushBoolean", LuaPushBoolean);
		L.RegFunction("LuaPushLightUserData", LuaPushLightUserData);
		L.RegFunction("LuaPushThread", LuaPushThread);
		L.RegFunction("LuaGetTable", LuaGetTable);
		L.RegFunction("LuaGetField", LuaGetField);
		L.RegFunction("LuaRawGet", LuaRawGet);
		L.RegFunction("LuaRawGetI", LuaRawGetI);
		L.RegFunction("LuaCreateTable", LuaCreateTable);
		L.RegFunction("LuaNewUserData", LuaNewUserData);
		L.RegFunction("LuaGetMetaTable", LuaGetMetaTable);
		L.RegFunction("LuaGetEnv", LuaGetEnv);
		L.RegFunction("LuaSetTable", LuaSetTable);
		L.RegFunction("LuaSetField", LuaSetField);
		L.RegFunction("LuaRawSet", LuaRawSet);
		L.RegFunction("LuaRawSetI", LuaRawSetI);
		L.RegFunction("LuaSetMetaTable", LuaSetMetaTable);
		L.RegFunction("LuaSetEnv", LuaSetEnv);
		L.RegFunction("LuaCall", LuaCall);
		L.RegFunction("LuaPCall", LuaPCall);
		L.RegFunction("LuaYield", LuaYield);
		L.RegFunction("LuaResume", LuaResume);
		L.RegFunction("LuaStatus", LuaStatus);
		L.RegFunction("LuaGC", LuaGC);
		L.RegFunction("LuaNext", LuaNext);
		L.RegFunction("LuaConcat", LuaConcat);
		L.RegFunction("LuaPop", LuaPop);
		L.RegFunction("LuaNewTable", LuaNewTable);
		L.RegFunction("LuaPushFunction", LuaPushFunction);
		L.RegFunction("lua_isfunction", lua_isfunction);
		L.RegFunction("lua_istable", lua_istable);
		L.RegFunction("lua_islightuserdata", lua_islightuserdata);
		L.RegFunction("lua_isnil", lua_isnil);
		L.RegFunction("lua_isboolean", lua_isboolean);
		L.RegFunction("lua_isthread", lua_isthread);
		L.RegFunction("lua_isnone", lua_isnone);
		L.RegFunction("lua_isnoneornil", lua_isnoneornil);
		L.RegFunction("LuaRawGlobal", LuaRawGlobal);
		L.RegFunction("LuaSetGlobal", LuaSetGlobal);
		L.RegFunction("LuaGetGlobal", LuaGetGlobal);
		L.RegFunction("LuaOpenLibs", LuaOpenLibs);
		L.RegFunction("AbsIndex", AbsIndex);
		L.RegFunction("LuaGetN", LuaGetN);
		L.RegFunction("LuaCheckNumber", LuaCheckNumber);
		L.RegFunction("LuaCheckInteger", LuaCheckInteger);
		L.RegFunction("LuaCheckBoolean", LuaCheckBoolean);
		L.RegFunction("LuaCheckLString", LuaCheckLString);
		L.RegFunction("LuaLoadBuffer", LuaLoadBuffer);
		L.RegFunction("LuaFindTable", LuaFindTable);
		L.RegFunction("LuaTypeError", LuaTypeError);
		L.RegFunction("LuaDoString", LuaDoString);
		L.RegFunction("LuaDoFile", LuaDoFile);
		L.RegFunction("LuaRef", LuaRef);
		L.RegFunction("LuaGetRef", LuaGetRef);
		L.RegFunction("LuaUnRef", LuaUnRef);
		L.RegFunction("LuaRequire", LuaRequire);
		L.RegFunction("ThrowLuaException", ThrowLuaException);
		L.RegFunction("ToLuaRef", ToLuaRef);
		L.RegFunction("LuaUpdate", LuaUpdate);
		L.RegFunction("LuaLateUpdate", LuaLateUpdate);
		L.RegFunction("LuaFixedUpdate", LuaFixedUpdate);
		L.RegFunction("OpenToLuaLibs", OpenToLuaLibs);
		L.RegFunction("ToLuaPushTraceback", ToLuaPushTraceback);
		L.RegFunction("ToLuaUnRef", ToLuaUnRef);
		L.RegFunction("New", _CreateLuaInterface_LuaStatePtr);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateLuaInterface_LuaStatePtr(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				LuaInterface.LuaStatePtr obj = new LuaInterface.LuaStatePtr();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: LuaInterface.LuaStatePtr.New");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LuaUpValueIndex(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			LuaInterface.LuaStatePtr obj = (LuaInterface.LuaStatePtr)ToLua.CheckObject(L, 1, typeof(LuaInterface.LuaStatePtr));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			int o = obj.LuaUpValueIndex(arg0);
			LuaDLL.lua_pushinteger(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LuaNewState(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			LuaInterface.LuaStatePtr obj = (LuaInterface.LuaStatePtr)ToLua.CheckObject(L, 1, typeof(LuaInterface.LuaStatePtr));
			System.IntPtr o = obj.LuaNewState();
			LuaDLL.lua_pushlightuserdata(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LuaClose(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			LuaInterface.LuaStatePtr obj = (LuaInterface.LuaStatePtr)ToLua.CheckObject(L, 1, typeof(LuaInterface.LuaStatePtr));
			obj.LuaClose();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LuaNewThread(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			LuaInterface.LuaStatePtr obj = (LuaInterface.LuaStatePtr)ToLua.CheckObject(L, 1, typeof(LuaInterface.LuaStatePtr));
			System.IntPtr o = obj.LuaNewThread();
			LuaDLL.lua_pushlightuserdata(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LuaAtPanic(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			LuaInterface.LuaStatePtr obj = (LuaInterface.LuaStatePtr)ToLua.CheckObject(L, 1, typeof(LuaInterface.LuaStatePtr));
			System.IntPtr arg0 = (System.IntPtr)LuaDLL.lua_touserdata(L, 2);
			System.IntPtr o = obj.LuaAtPanic(arg0);
			LuaDLL.lua_pushlightuserdata(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LuaGetTop(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			LuaInterface.LuaStatePtr obj = (LuaInterface.LuaStatePtr)ToLua.CheckObject(L, 1, typeof(LuaInterface.LuaStatePtr));
			int o = obj.LuaGetTop();
			LuaDLL.lua_pushinteger(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LuaSetTop(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			LuaInterface.LuaStatePtr obj = (LuaInterface.LuaStatePtr)ToLua.CheckObject(L, 1, typeof(LuaInterface.LuaStatePtr));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.LuaSetTop(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LuaPushValue(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			LuaInterface.LuaStatePtr obj = (LuaInterface.LuaStatePtr)ToLua.CheckObject(L, 1, typeof(LuaInterface.LuaStatePtr));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.LuaPushValue(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LuaRemove(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			LuaInterface.LuaStatePtr obj = (LuaInterface.LuaStatePtr)ToLua.CheckObject(L, 1, typeof(LuaInterface.LuaStatePtr));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.LuaRemove(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LuaInsert(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			LuaInterface.LuaStatePtr obj = (LuaInterface.LuaStatePtr)ToLua.CheckObject(L, 1, typeof(LuaInterface.LuaStatePtr));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.LuaInsert(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LuaReplace(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			LuaInterface.LuaStatePtr obj = (LuaInterface.LuaStatePtr)ToLua.CheckObject(L, 1, typeof(LuaInterface.LuaStatePtr));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.LuaReplace(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LuaCheckStack(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			LuaInterface.LuaStatePtr obj = (LuaInterface.LuaStatePtr)ToLua.CheckObject(L, 1, typeof(LuaInterface.LuaStatePtr));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			bool o = obj.LuaCheckStack(arg0);
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LuaXMove(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			LuaInterface.LuaStatePtr obj = (LuaInterface.LuaStatePtr)ToLua.CheckObject(L, 1, typeof(LuaInterface.LuaStatePtr));
			System.IntPtr arg0 = (System.IntPtr)LuaDLL.lua_touserdata(L, 2);
			int arg1 = (int)LuaDLL.luaL_checknumber(L, 3);
			obj.LuaXMove(arg0, arg1);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LuaIsNumber(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			LuaInterface.LuaStatePtr obj = (LuaInterface.LuaStatePtr)ToLua.CheckObject(L, 1, typeof(LuaInterface.LuaStatePtr));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			bool o = obj.LuaIsNumber(arg0);
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LuaIsString(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			LuaInterface.LuaStatePtr obj = (LuaInterface.LuaStatePtr)ToLua.CheckObject(L, 1, typeof(LuaInterface.LuaStatePtr));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			bool o = obj.LuaIsString(arg0);
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LuaIsCFunction(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			LuaInterface.LuaStatePtr obj = (LuaInterface.LuaStatePtr)ToLua.CheckObject(L, 1, typeof(LuaInterface.LuaStatePtr));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			bool o = obj.LuaIsCFunction(arg0);
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LuaIsUserData(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			LuaInterface.LuaStatePtr obj = (LuaInterface.LuaStatePtr)ToLua.CheckObject(L, 1, typeof(LuaInterface.LuaStatePtr));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			bool o = obj.LuaIsUserData(arg0);
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LuaIsNil(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			LuaInterface.LuaStatePtr obj = (LuaInterface.LuaStatePtr)ToLua.CheckObject(L, 1, typeof(LuaInterface.LuaStatePtr));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			bool o = obj.LuaIsNil(arg0);
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LuaType(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			LuaInterface.LuaStatePtr obj = (LuaInterface.LuaStatePtr)ToLua.CheckObject(L, 1, typeof(LuaInterface.LuaStatePtr));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			LuaInterface.LuaTypes o = obj.LuaType(arg0);
			ToLua.Push(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LuaTypeName(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 2 && TypeChecker.CheckTypes(L, 1, typeof(LuaInterface.LuaStatePtr), typeof(int)))
			{
				LuaInterface.LuaStatePtr obj = (LuaInterface.LuaStatePtr)ToLua.ToObject(L, 1);
				int arg0 = (int)LuaDLL.lua_tonumber(L, 2);
				string o = obj.LuaTypeName(arg0);
				LuaDLL.lua_pushstring(L, o);
				return 1;
			}
			else if (count == 2 && TypeChecker.CheckTypes(L, 1, typeof(LuaInterface.LuaStatePtr), typeof(LuaInterface.LuaTypes)))
			{
				LuaInterface.LuaStatePtr obj = (LuaInterface.LuaStatePtr)ToLua.ToObject(L, 1);
				LuaInterface.LuaTypes arg0 = (LuaInterface.LuaTypes)ToLua.ToObject(L, 2);
				string o = obj.LuaTypeName(arg0);
				LuaDLL.lua_pushstring(L, o);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: LuaInterface.LuaStatePtr.LuaTypeName");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LuaEqual(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			LuaInterface.LuaStatePtr obj = (LuaInterface.LuaStatePtr)ToLua.CheckObject(L, 1, typeof(LuaInterface.LuaStatePtr));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			int arg1 = (int)LuaDLL.luaL_checknumber(L, 3);
			bool o = obj.LuaEqual(arg0, arg1);
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LuaRawEqual(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			LuaInterface.LuaStatePtr obj = (LuaInterface.LuaStatePtr)ToLua.CheckObject(L, 1, typeof(LuaInterface.LuaStatePtr));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			int arg1 = (int)LuaDLL.luaL_checknumber(L, 3);
			bool o = obj.LuaRawEqual(arg0, arg1);
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LuaLessThan(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			LuaInterface.LuaStatePtr obj = (LuaInterface.LuaStatePtr)ToLua.CheckObject(L, 1, typeof(LuaInterface.LuaStatePtr));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			int arg1 = (int)LuaDLL.luaL_checknumber(L, 3);
			bool o = obj.LuaLessThan(arg0, arg1);
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LuaToNumber(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			LuaInterface.LuaStatePtr obj = (LuaInterface.LuaStatePtr)ToLua.CheckObject(L, 1, typeof(LuaInterface.LuaStatePtr));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			double o = obj.LuaToNumber(arg0);
			LuaDLL.lua_pushnumber(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LuaToInteger(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			LuaInterface.LuaStatePtr obj = (LuaInterface.LuaStatePtr)ToLua.CheckObject(L, 1, typeof(LuaInterface.LuaStatePtr));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			int o = obj.LuaToInteger(arg0);
			LuaDLL.lua_pushinteger(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LuaToBoolean(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			LuaInterface.LuaStatePtr obj = (LuaInterface.LuaStatePtr)ToLua.CheckObject(L, 1, typeof(LuaInterface.LuaStatePtr));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			bool o = obj.LuaToBoolean(arg0);
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LuaToString(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			LuaInterface.LuaStatePtr obj = (LuaInterface.LuaStatePtr)ToLua.CheckObject(L, 1, typeof(LuaInterface.LuaStatePtr));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			string o = obj.LuaToString(arg0);
			LuaDLL.lua_pushstring(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LuaToLString(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			LuaInterface.LuaStatePtr obj = (LuaInterface.LuaStatePtr)ToLua.CheckObject(L, 1, typeof(LuaInterface.LuaStatePtr));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			int arg1;
			System.IntPtr o = obj.LuaToLString(arg0, out arg1);
			LuaDLL.lua_pushlightuserdata(L, o);
			LuaDLL.lua_pushinteger(L, arg1);
			return 2;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LuaToCFunction(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			LuaInterface.LuaStatePtr obj = (LuaInterface.LuaStatePtr)ToLua.CheckObject(L, 1, typeof(LuaInterface.LuaStatePtr));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			System.IntPtr o = obj.LuaToCFunction(arg0);
			LuaDLL.lua_pushlightuserdata(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LuaToUserData(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			LuaInterface.LuaStatePtr obj = (LuaInterface.LuaStatePtr)ToLua.CheckObject(L, 1, typeof(LuaInterface.LuaStatePtr));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			System.IntPtr o = obj.LuaToUserData(arg0);
			LuaDLL.lua_pushlightuserdata(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LuaToThread(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			LuaInterface.LuaStatePtr obj = (LuaInterface.LuaStatePtr)ToLua.CheckObject(L, 1, typeof(LuaInterface.LuaStatePtr));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			System.IntPtr o = obj.LuaToThread(arg0);
			LuaDLL.lua_pushlightuserdata(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LuaToPointer(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			LuaInterface.LuaStatePtr obj = (LuaInterface.LuaStatePtr)ToLua.CheckObject(L, 1, typeof(LuaInterface.LuaStatePtr));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			System.IntPtr o = obj.LuaToPointer(arg0);
			LuaDLL.lua_pushlightuserdata(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LuaObjLen(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			LuaInterface.LuaStatePtr obj = (LuaInterface.LuaStatePtr)ToLua.CheckObject(L, 1, typeof(LuaInterface.LuaStatePtr));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			int o = obj.LuaObjLen(arg0);
			LuaDLL.lua_pushinteger(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LuaPushNil(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			LuaInterface.LuaStatePtr obj = (LuaInterface.LuaStatePtr)ToLua.CheckObject(L, 1, typeof(LuaInterface.LuaStatePtr));
			obj.LuaPushNil();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LuaPushNumber(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			LuaInterface.LuaStatePtr obj = (LuaInterface.LuaStatePtr)ToLua.CheckObject(L, 1, typeof(LuaInterface.LuaStatePtr));
			double arg0 = (double)LuaDLL.luaL_checknumber(L, 2);
			obj.LuaPushNumber(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LuaPushInteger(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			LuaInterface.LuaStatePtr obj = (LuaInterface.LuaStatePtr)ToLua.CheckObject(L, 1, typeof(LuaInterface.LuaStatePtr));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.LuaPushInteger(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LuaPushLString(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			LuaInterface.LuaStatePtr obj = (LuaInterface.LuaStatePtr)ToLua.CheckObject(L, 1, typeof(LuaInterface.LuaStatePtr));
			byte[] arg0 = ToLua.CheckByteBuffer(L, 2);
			int arg1 = (int)LuaDLL.luaL_checknumber(L, 3);
			obj.LuaPushLString(arg0, arg1);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LuaPushString(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			LuaInterface.LuaStatePtr obj = (LuaInterface.LuaStatePtr)ToLua.CheckObject(L, 1, typeof(LuaInterface.LuaStatePtr));
			string arg0 = ToLua.CheckString(L, 2);
			obj.LuaPushString(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LuaPushCClosure(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			LuaInterface.LuaStatePtr obj = (LuaInterface.LuaStatePtr)ToLua.CheckObject(L, 1, typeof(LuaInterface.LuaStatePtr));
			System.IntPtr arg0 = (System.IntPtr)LuaDLL.lua_touserdata(L, 2);
			int arg1 = (int)LuaDLL.luaL_checknumber(L, 3);
			obj.LuaPushCClosure(arg0, arg1);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LuaPushBoolean(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			LuaInterface.LuaStatePtr obj = (LuaInterface.LuaStatePtr)ToLua.CheckObject(L, 1, typeof(LuaInterface.LuaStatePtr));
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.LuaPushBoolean(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LuaPushLightUserData(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			LuaInterface.LuaStatePtr obj = (LuaInterface.LuaStatePtr)ToLua.CheckObject(L, 1, typeof(LuaInterface.LuaStatePtr));
			System.IntPtr arg0 = (System.IntPtr)LuaDLL.lua_touserdata(L, 2);
			obj.LuaPushLightUserData(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LuaPushThread(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			LuaInterface.LuaStatePtr obj = (LuaInterface.LuaStatePtr)ToLua.CheckObject(L, 1, typeof(LuaInterface.LuaStatePtr));
			int o = obj.LuaPushThread();
			LuaDLL.lua_pushinteger(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LuaGetTable(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			LuaInterface.LuaStatePtr obj = (LuaInterface.LuaStatePtr)ToLua.CheckObject(L, 1, typeof(LuaInterface.LuaStatePtr));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.LuaGetTable(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LuaGetField(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			LuaInterface.LuaStatePtr obj = (LuaInterface.LuaStatePtr)ToLua.CheckObject(L, 1, typeof(LuaInterface.LuaStatePtr));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			string arg1 = ToLua.CheckString(L, 3);
			obj.LuaGetField(arg0, arg1);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LuaRawGet(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			LuaInterface.LuaStatePtr obj = (LuaInterface.LuaStatePtr)ToLua.CheckObject(L, 1, typeof(LuaInterface.LuaStatePtr));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.LuaRawGet(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LuaRawGetI(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			LuaInterface.LuaStatePtr obj = (LuaInterface.LuaStatePtr)ToLua.CheckObject(L, 1, typeof(LuaInterface.LuaStatePtr));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			int arg1 = (int)LuaDLL.luaL_checknumber(L, 3);
			obj.LuaRawGetI(arg0, arg1);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LuaCreateTable(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			LuaInterface.LuaStatePtr obj = (LuaInterface.LuaStatePtr)ToLua.CheckObject(L, 1, typeof(LuaInterface.LuaStatePtr));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			int arg1 = (int)LuaDLL.luaL_checknumber(L, 3);
			obj.LuaCreateTable(arg0, arg1);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LuaNewUserData(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			LuaInterface.LuaStatePtr obj = (LuaInterface.LuaStatePtr)ToLua.CheckObject(L, 1, typeof(LuaInterface.LuaStatePtr));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			System.IntPtr o = obj.LuaNewUserData(arg0);
			LuaDLL.lua_pushlightuserdata(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LuaGetMetaTable(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 2 && TypeChecker.CheckTypes(L, 1, typeof(LuaInterface.LuaStatePtr), typeof(string)))
			{
				LuaInterface.LuaStatePtr obj = (LuaInterface.LuaStatePtr)ToLua.ToObject(L, 1);
				string arg0 = ToLua.ToString(L, 2);
				obj.LuaGetMetaTable(arg0);
				return 0;
			}
			else if (count == 2 && TypeChecker.CheckTypes(L, 1, typeof(LuaInterface.LuaStatePtr), typeof(int)))
			{
				LuaInterface.LuaStatePtr obj = (LuaInterface.LuaStatePtr)ToLua.ToObject(L, 1);
				int arg0 = (int)LuaDLL.lua_tonumber(L, 2);
				int o = obj.LuaGetMetaTable(arg0);
				LuaDLL.lua_pushinteger(L, o);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: LuaInterface.LuaStatePtr.LuaGetMetaTable");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LuaGetEnv(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			LuaInterface.LuaStatePtr obj = (LuaInterface.LuaStatePtr)ToLua.CheckObject(L, 1, typeof(LuaInterface.LuaStatePtr));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.LuaGetEnv(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LuaSetTable(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			LuaInterface.LuaStatePtr obj = (LuaInterface.LuaStatePtr)ToLua.CheckObject(L, 1, typeof(LuaInterface.LuaStatePtr));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.LuaSetTable(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LuaSetField(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			LuaInterface.LuaStatePtr obj = (LuaInterface.LuaStatePtr)ToLua.CheckObject(L, 1, typeof(LuaInterface.LuaStatePtr));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			string arg1 = ToLua.CheckString(L, 3);
			obj.LuaSetField(arg0, arg1);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LuaRawSet(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			LuaInterface.LuaStatePtr obj = (LuaInterface.LuaStatePtr)ToLua.CheckObject(L, 1, typeof(LuaInterface.LuaStatePtr));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.LuaRawSet(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LuaRawSetI(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			LuaInterface.LuaStatePtr obj = (LuaInterface.LuaStatePtr)ToLua.CheckObject(L, 1, typeof(LuaInterface.LuaStatePtr));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			int arg1 = (int)LuaDLL.luaL_checknumber(L, 3);
			obj.LuaRawSetI(arg0, arg1);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LuaSetMetaTable(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			LuaInterface.LuaStatePtr obj = (LuaInterface.LuaStatePtr)ToLua.CheckObject(L, 1, typeof(LuaInterface.LuaStatePtr));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.LuaSetMetaTable(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LuaSetEnv(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			LuaInterface.LuaStatePtr obj = (LuaInterface.LuaStatePtr)ToLua.CheckObject(L, 1, typeof(LuaInterface.LuaStatePtr));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.LuaSetEnv(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LuaCall(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			LuaInterface.LuaStatePtr obj = (LuaInterface.LuaStatePtr)ToLua.CheckObject(L, 1, typeof(LuaInterface.LuaStatePtr));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			int arg1 = (int)LuaDLL.luaL_checknumber(L, 3);
			obj.LuaCall(arg0, arg1);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LuaPCall(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 4);
			LuaInterface.LuaStatePtr obj = (LuaInterface.LuaStatePtr)ToLua.CheckObject(L, 1, typeof(LuaInterface.LuaStatePtr));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			int arg1 = (int)LuaDLL.luaL_checknumber(L, 3);
			int arg2 = (int)LuaDLL.luaL_checknumber(L, 4);
			int o = obj.LuaPCall(arg0, arg1, arg2);
			LuaDLL.lua_pushinteger(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LuaYield(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			LuaInterface.LuaStatePtr obj = (LuaInterface.LuaStatePtr)ToLua.CheckObject(L, 1, typeof(LuaInterface.LuaStatePtr));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			int o = obj.LuaYield(arg0);
			LuaDLL.lua_pushinteger(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LuaResume(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			LuaInterface.LuaStatePtr obj = (LuaInterface.LuaStatePtr)ToLua.CheckObject(L, 1, typeof(LuaInterface.LuaStatePtr));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			int o = obj.LuaResume(arg0);
			LuaDLL.lua_pushinteger(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LuaStatus(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			LuaInterface.LuaStatePtr obj = (LuaInterface.LuaStatePtr)ToLua.CheckObject(L, 1, typeof(LuaInterface.LuaStatePtr));
			int o = obj.LuaStatus();
			LuaDLL.lua_pushinteger(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LuaGC(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			LuaInterface.LuaStatePtr obj = (LuaInterface.LuaStatePtr)ToLua.CheckObject(L, 1, typeof(LuaInterface.LuaStatePtr));
			LuaInterface.LuaGCOptions arg0 = (LuaInterface.LuaGCOptions)ToLua.CheckObject(L, 2, typeof(LuaInterface.LuaGCOptions));
			int arg1 = (int)LuaDLL.luaL_checknumber(L, 3);
			obj.LuaGC(arg0, arg1);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LuaNext(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			LuaInterface.LuaStatePtr obj = (LuaInterface.LuaStatePtr)ToLua.CheckObject(L, 1, typeof(LuaInterface.LuaStatePtr));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			bool o = obj.LuaNext(arg0);
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LuaConcat(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			LuaInterface.LuaStatePtr obj = (LuaInterface.LuaStatePtr)ToLua.CheckObject(L, 1, typeof(LuaInterface.LuaStatePtr));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.LuaConcat(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LuaPop(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			LuaInterface.LuaStatePtr obj = (LuaInterface.LuaStatePtr)ToLua.CheckObject(L, 1, typeof(LuaInterface.LuaStatePtr));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.LuaPop(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LuaNewTable(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			LuaInterface.LuaStatePtr obj = (LuaInterface.LuaStatePtr)ToLua.CheckObject(L, 1, typeof(LuaInterface.LuaStatePtr));
			obj.LuaNewTable();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LuaPushFunction(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			LuaInterface.LuaStatePtr obj = (LuaInterface.LuaStatePtr)ToLua.CheckObject(L, 1, typeof(LuaInterface.LuaStatePtr));
			LuaInterface.LuaCSFunction arg0 = null;
			LuaTypes funcType2 = LuaDLL.lua_type(L, 2);

			if (funcType2 != LuaTypes.LUA_TFUNCTION)
			{
				 arg0 = (LuaInterface.LuaCSFunction)ToLua.CheckObject(L, 2, typeof(LuaInterface.LuaCSFunction));
			}
			else
			{
				LuaFunction func = ToLua.ToLuaFunction(L, 2);
				arg0 = DelegateFactory.CreateDelegate(typeof(LuaInterface.LuaCSFunction), func) as LuaInterface.LuaCSFunction;
			}

			obj.LuaPushFunction(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int lua_isfunction(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			LuaInterface.LuaStatePtr obj = (LuaInterface.LuaStatePtr)ToLua.CheckObject(L, 1, typeof(LuaInterface.LuaStatePtr));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			bool o = obj.lua_isfunction(arg0);
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int lua_istable(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			LuaInterface.LuaStatePtr obj = (LuaInterface.LuaStatePtr)ToLua.CheckObject(L, 1, typeof(LuaInterface.LuaStatePtr));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			bool o = obj.lua_istable(arg0);
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int lua_islightuserdata(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			LuaInterface.LuaStatePtr obj = (LuaInterface.LuaStatePtr)ToLua.CheckObject(L, 1, typeof(LuaInterface.LuaStatePtr));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			bool o = obj.lua_islightuserdata(arg0);
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int lua_isnil(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			LuaInterface.LuaStatePtr obj = (LuaInterface.LuaStatePtr)ToLua.CheckObject(L, 1, typeof(LuaInterface.LuaStatePtr));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			bool o = obj.lua_isnil(arg0);
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int lua_isboolean(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			LuaInterface.LuaStatePtr obj = (LuaInterface.LuaStatePtr)ToLua.CheckObject(L, 1, typeof(LuaInterface.LuaStatePtr));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			bool o = obj.lua_isboolean(arg0);
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int lua_isthread(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			LuaInterface.LuaStatePtr obj = (LuaInterface.LuaStatePtr)ToLua.CheckObject(L, 1, typeof(LuaInterface.LuaStatePtr));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			bool o = obj.lua_isthread(arg0);
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int lua_isnone(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			LuaInterface.LuaStatePtr obj = (LuaInterface.LuaStatePtr)ToLua.CheckObject(L, 1, typeof(LuaInterface.LuaStatePtr));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			bool o = obj.lua_isnone(arg0);
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int lua_isnoneornil(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			LuaInterface.LuaStatePtr obj = (LuaInterface.LuaStatePtr)ToLua.CheckObject(L, 1, typeof(LuaInterface.LuaStatePtr));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			bool o = obj.lua_isnoneornil(arg0);
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LuaRawGlobal(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			LuaInterface.LuaStatePtr obj = (LuaInterface.LuaStatePtr)ToLua.CheckObject(L, 1, typeof(LuaInterface.LuaStatePtr));
			string arg0 = ToLua.CheckString(L, 2);
			obj.LuaRawGlobal(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LuaSetGlobal(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			LuaInterface.LuaStatePtr obj = (LuaInterface.LuaStatePtr)ToLua.CheckObject(L, 1, typeof(LuaInterface.LuaStatePtr));
			string arg0 = ToLua.CheckString(L, 2);
			obj.LuaSetGlobal(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LuaGetGlobal(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			LuaInterface.LuaStatePtr obj = (LuaInterface.LuaStatePtr)ToLua.CheckObject(L, 1, typeof(LuaInterface.LuaStatePtr));
			string arg0 = ToLua.CheckString(L, 2);
			obj.LuaGetGlobal(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LuaOpenLibs(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			LuaInterface.LuaStatePtr obj = (LuaInterface.LuaStatePtr)ToLua.CheckObject(L, 1, typeof(LuaInterface.LuaStatePtr));
			obj.LuaOpenLibs();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int AbsIndex(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			LuaInterface.LuaStatePtr obj = (LuaInterface.LuaStatePtr)ToLua.CheckObject(L, 1, typeof(LuaInterface.LuaStatePtr));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			int o = obj.AbsIndex(arg0);
			LuaDLL.lua_pushinteger(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LuaGetN(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			LuaInterface.LuaStatePtr obj = (LuaInterface.LuaStatePtr)ToLua.CheckObject(L, 1, typeof(LuaInterface.LuaStatePtr));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			int o = obj.LuaGetN(arg0);
			LuaDLL.lua_pushinteger(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LuaCheckNumber(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			LuaInterface.LuaStatePtr obj = (LuaInterface.LuaStatePtr)ToLua.CheckObject(L, 1, typeof(LuaInterface.LuaStatePtr));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			double o = obj.LuaCheckNumber(arg0);
			LuaDLL.lua_pushnumber(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LuaCheckInteger(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			LuaInterface.LuaStatePtr obj = (LuaInterface.LuaStatePtr)ToLua.CheckObject(L, 1, typeof(LuaInterface.LuaStatePtr));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			int o = obj.LuaCheckInteger(arg0);
			LuaDLL.lua_pushinteger(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LuaCheckBoolean(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			LuaInterface.LuaStatePtr obj = (LuaInterface.LuaStatePtr)ToLua.CheckObject(L, 1, typeof(LuaInterface.LuaStatePtr));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			bool o = obj.LuaCheckBoolean(arg0);
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LuaCheckLString(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			LuaInterface.LuaStatePtr obj = (LuaInterface.LuaStatePtr)ToLua.CheckObject(L, 1, typeof(LuaInterface.LuaStatePtr));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			int arg1;
			string o = obj.LuaCheckLString(arg0, out arg1);
			LuaDLL.lua_pushstring(L, o);
			LuaDLL.lua_pushinteger(L, arg1);
			return 2;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LuaLoadBuffer(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 4);
			LuaInterface.LuaStatePtr obj = (LuaInterface.LuaStatePtr)ToLua.CheckObject(L, 1, typeof(LuaInterface.LuaStatePtr));
			byte[] arg0 = ToLua.CheckByteBuffer(L, 2);
			int arg1 = (int)LuaDLL.luaL_checknumber(L, 3);
			string arg2 = ToLua.CheckString(L, 4);
			int o = obj.LuaLoadBuffer(arg0, arg1, arg2);
			LuaDLL.lua_pushinteger(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LuaFindTable(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 4);
			LuaInterface.LuaStatePtr obj = (LuaInterface.LuaStatePtr)ToLua.CheckObject(L, 1, typeof(LuaInterface.LuaStatePtr));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			string arg1 = ToLua.CheckString(L, 3);
			int arg2 = (int)LuaDLL.luaL_checknumber(L, 4);
			System.IntPtr o = obj.LuaFindTable(arg0, arg1, arg2);
			LuaDLL.lua_pushlightuserdata(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LuaTypeError(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 4);
			LuaInterface.LuaStatePtr obj = (LuaInterface.LuaStatePtr)ToLua.CheckObject(L, 1, typeof(LuaInterface.LuaStatePtr));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			string arg1 = ToLua.CheckString(L, 3);
			string arg2 = ToLua.CheckString(L, 4);
			int o = obj.LuaTypeError(arg0, arg1, arg2);
			LuaDLL.lua_pushinteger(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LuaDoString(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			LuaInterface.LuaStatePtr obj = (LuaInterface.LuaStatePtr)ToLua.CheckObject(L, 1, typeof(LuaInterface.LuaStatePtr));
			string arg0 = ToLua.CheckString(L, 2);
			string arg1 = ToLua.CheckString(L, 3);
			bool o = obj.LuaDoString(arg0, arg1);
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LuaDoFile(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			LuaInterface.LuaStatePtr obj = (LuaInterface.LuaStatePtr)ToLua.CheckObject(L, 1, typeof(LuaInterface.LuaStatePtr));
			string arg0 = ToLua.CheckString(L, 2);
			bool o = obj.LuaDoFile(arg0);
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LuaRef(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			LuaInterface.LuaStatePtr obj = (LuaInterface.LuaStatePtr)ToLua.CheckObject(L, 1, typeof(LuaInterface.LuaStatePtr));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			int o = obj.LuaRef(arg0);
			LuaDLL.lua_pushinteger(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LuaGetRef(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			LuaInterface.LuaStatePtr obj = (LuaInterface.LuaStatePtr)ToLua.CheckObject(L, 1, typeof(LuaInterface.LuaStatePtr));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.LuaGetRef(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LuaUnRef(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			LuaInterface.LuaStatePtr obj = (LuaInterface.LuaStatePtr)ToLua.CheckObject(L, 1, typeof(LuaInterface.LuaStatePtr));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.LuaUnRef(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LuaRequire(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			LuaInterface.LuaStatePtr obj = (LuaInterface.LuaStatePtr)ToLua.CheckObject(L, 1, typeof(LuaInterface.LuaStatePtr));
			string arg0 = ToLua.CheckString(L, 2);
			int o = obj.LuaRequire(arg0);
			LuaDLL.lua_pushinteger(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ThrowLuaException(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			LuaInterface.LuaStatePtr obj = (LuaInterface.LuaStatePtr)ToLua.CheckObject(L, 1, typeof(LuaInterface.LuaStatePtr));
			System.Exception arg0 = (System.Exception)ToLua.CheckObject(L, 2, typeof(System.Exception));
			obj.ThrowLuaException(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ToLuaRef(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			LuaInterface.LuaStatePtr obj = (LuaInterface.LuaStatePtr)ToLua.CheckObject(L, 1, typeof(LuaInterface.LuaStatePtr));
			int o = obj.ToLuaRef();
			LuaDLL.lua_pushinteger(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LuaUpdate(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			LuaInterface.LuaStatePtr obj = (LuaInterface.LuaStatePtr)ToLua.CheckObject(L, 1, typeof(LuaInterface.LuaStatePtr));
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			float arg1 = (float)LuaDLL.luaL_checknumber(L, 3);
			int o = obj.LuaUpdate(arg0, arg1);
			LuaDLL.lua_pushinteger(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LuaLateUpdate(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			LuaInterface.LuaStatePtr obj = (LuaInterface.LuaStatePtr)ToLua.CheckObject(L, 1, typeof(LuaInterface.LuaStatePtr));
			int o = obj.LuaLateUpdate();
			LuaDLL.lua_pushinteger(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LuaFixedUpdate(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			LuaInterface.LuaStatePtr obj = (LuaInterface.LuaStatePtr)ToLua.CheckObject(L, 1, typeof(LuaInterface.LuaStatePtr));
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			int o = obj.LuaFixedUpdate(arg0);
			LuaDLL.lua_pushinteger(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OpenToLuaLibs(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			LuaInterface.LuaStatePtr obj = (LuaInterface.LuaStatePtr)ToLua.CheckObject(L, 1, typeof(LuaInterface.LuaStatePtr));
			obj.OpenToLuaLibs();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ToLuaPushTraceback(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			LuaInterface.LuaStatePtr obj = (LuaInterface.LuaStatePtr)ToLua.CheckObject(L, 1, typeof(LuaInterface.LuaStatePtr));
			obj.ToLuaPushTraceback();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ToLuaUnRef(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			LuaInterface.LuaStatePtr obj = (LuaInterface.LuaStatePtr)ToLua.CheckObject(L, 1, typeof(LuaInterface.LuaStatePtr));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.ToLuaUnRef(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

