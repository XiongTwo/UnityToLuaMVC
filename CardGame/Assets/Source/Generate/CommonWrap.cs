//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class CommonWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(Common), typeof(System.Object));
		L.RegFunction("Split", Split);
		L.RegFunction("StrTrim", StrTrim);
		L.RegFunction("ReplaceFile", ReplaceFile);
		L.RegFunction("New", _CreateCommon);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("targetPlatform", get_targetPlatform, set_targetPlatform);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateCommon(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				Common obj = new Common();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: Common.New");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Split(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			string arg0 = ToLua.CheckString(L, 1);
			string[] arg1 = ToLua.CheckStringArray(L, 2);
			string[] o = Common.Split(arg0, arg1);
			ToLua.Push(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int StrTrim(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			string arg0 = ToLua.CheckString(L, 1);
			string o = Common.StrTrim(arg0);
			LuaDLL.lua_pushstring(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ReplaceFile(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			string arg0 = ToLua.CheckString(L, 1);
			byte[] arg1 = ToLua.CheckByteBuffer(L, 2);
			Common.ReplaceFile(arg0, arg1);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_targetPlatform(IntPtr L)
	{
		try
		{
			ToLua.Push(L, Common.targetPlatform);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_targetPlatform(IntPtr L)
	{
		try
		{
			StaticModules.E_DevicePlatform arg0 = (StaticModules.E_DevicePlatform)ToLua.CheckObject(L, 2, typeof(StaticModules.E_DevicePlatform));
			Common.targetPlatform = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

